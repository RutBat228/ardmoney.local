<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const HOST = "localhost";
const USER = "ardmoney";
const BAZA = "ardmoney";
const PASS = "64ihufoz";
const TABLE_PREFIX = "navigard_";

// –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
define('BOT_TOKEN', '7740028419:AAGuY8rxAt_kmQbP6w2qBPI2wqXbdo3bNds');
define('API_URL', 'https://api.telegram.org/bot' . BOT_TOKEN . '/');

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
$input = file_get_contents('php://input');
file_put_contents(__DIR__ . '/telegram_log.txt', date('[Y-m-d H:i:s] ') . "Input: " . $input . "\n", FILE_APPEND);

// –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
global $connect;
$connect = new mysqli(HOST, USER, PASS, BAZA);
if ($connect->connect_error) {
    file_put_contents(__DIR__ . '/telegram_log.txt', date('[Y-m-d H:i:s] ') . "DB Connection failed: " . $connect->connect_error . "\n", FILE_APPEND);
    http_response_code(200);
    exit;
}
$connect->query("SET NAMES 'utf8'");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –≤ Telegram
function sendResponse($method, $data) {
    $url = API_URL . $method;
    $options = [
        'http' => [
            'header' => "Content-type: application/json\r\n",
            'method' => 'POST',
            'content' => json_encode($data),
        ],
    ];
    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
    file_put_contents(__DIR__ . '/telegram_log.txt', date('[Y-m-d H:i:s] ') . "Sent response to $method: " . json_encode($data) . "\n", FILE_APPEND);
    return $result;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è Telegram (Markdown)
function sanitize($input) {
    $input = trim($input ?? '');
    return str_replace(['*', '_', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'], 
                       ['\*', '\_', '\[', '\]', '\(', '\)', '\~', '\`', '\>', '\#', '\+', '\-', '\=', '\|', '\{', '\}', '\.', '\!'], 
                       $input);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
$update = json_decode($input, true);
if (!$update) {
    file_put_contents(__DIR__ . '/telegram_log.txt', date('[Y-m-d H:i:s] ') . "Failed to decode JSON: " . json_last_error_msg() . "\n", FILE_APPEND);
    http_response_code(200);
    exit;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
if (isset($update['message'])) {
    $chat_id = $update['message']['chat']['id'];
    $text = trim($update['message']['text']);

    if ($text === '/start') {
        sendResponse('sendMessage', [
            'chat_id' => $chat_id,
            'text' => "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ–º–æ–≤.\n–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ì–∞–≥–∞—Ä–∏–Ω–∞), —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –¥–æ–º–∞.",
            'parse_mode' => 'Markdown'
        ]);
    } elseif (strlen($text) >= 2) {
        // –ü–æ–∏—Å–∫ –¥–æ–º–æ–≤
        $query = "SELECT id, adress, complete, new, region FROM " . TABLE_PREFIX . "adress 
                  WHERE adress LIKE '%$text%' 
                  ORDER BY CASE WHEN adress LIKE '$text%' THEN 0 ELSE 1 END, adress 
                  LIMIT 10";
        $result = $connect->query($query);
        if (!$result) {
            file_put_contents(__DIR__ . '/telegram_log.txt', date('[Y-m-d H:i:s] ') . "Query failed: " . $connect->error . "\n", FILE_APPEND);
            sendResponse('sendMessage', [
                'chat_id' => $chat_id,
                'text' => "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            ]);
            http_response_code(200);
            exit;
        }

        if ($result->num_rows > 0) {
            $keyboard = ['inline_keyboard' => []];
            while ($row = $result->fetch_assoc()) {
                $id = $row['id'];
                $address = sanitize($row['adress']);
                $complete = $row['complete'] == 1 ? "‚úÖ" : "üè†";
                $is_new = $row['new'] == 1 ? " [NEW]" : "";
                $button_text = "$complete $address$is_new";

                $keyboard['inline_keyboard'][] = [
                    ['text' => $button_text, 'callback_data' => "house_$id"]
                ];
            }

            sendResponse('sendMessage', [
                'chat_id' => $chat_id,
                'text' => "–ù–∞–π–¥–µ–Ω–æ –¥–æ–º–æ–≤: {$result->num_rows}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–º –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
                'reply_markup' => $keyboard
            ]);
        } else {
            sendResponse('sendMessage', [
                'chat_id' => $chat_id,
                'text' => "–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è \"$text\".\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–º —á–µ—Ä–µ–∑ —Å–∞–π—Ç."
            ]);
        }
    } else {
        sendResponse('sendMessage', [
            'chat_id' => $chat_id,
            'text' => "–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞."
        ]);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ (callback query)
if (isset($update['callback_query'])) {
    $callback_id = $update['callback_query']['id'];
    $chat_id = $update['callback_query']['message']['chat']['id'];
    $data = $update['callback_query']['data'];

    if (strpos($data, 'house_') === 0) {
        $house_id = (int)str_replace('house_', '', $data);

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ
        $query = "SELECT * FROM " . TABLE_PREFIX . "adress WHERE id = $house_id LIMIT 1";
        $result = $connect->query($query);
        if ($result && $result->num_rows > 0) {
            $row = $result->fetch_assoc();
            $address = sanitize($row['adress']);
            $complete = $row['complete'] == 1 ? "‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω" : "üè† –í –ø—Ä–æ—Ü–µ—Å—Å–µ";
            $is_new = $row['new'] == 1 ? " [NEW]" : "";
            $oboryda = sanitize($row['oboryda'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $vihod_display = array_filter([$row['vihod'] ?? '', $row['vihod2'] ?? '', $row['vihod3'] ?? '', $row['vihod4'] ?? '', $row['vihod5'] ?? '']);
            $vihod_text = implode(', ', array_map('sanitize', $vihod_display));
            $podjezd = sanitize($row['podjezd'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $krisha = sanitize($row['krisha'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $kluch = sanitize($row['kluch'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $lesnica = sanitize($row['lesnica'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $dopzamok = sanitize($row['dopzamok'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $pitanie = sanitize($row['pitanie'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $link = sanitize($row['link'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $pon = sanitize($row['pon'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $region = sanitize($row['region'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $pred = sanitize($row['pred'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $phone = sanitize($row['phone'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
            $text = $row['text'] ?? '';

            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Å—Ç–∏–ª–µ –≤–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
            $response_text = "*$address*$is_new\n–°—Ç–∞—Ç—É—Å: $complete\n\n" .
                            "*–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ*\n" .
                            "üìç *–ê–¥—Ä–µ—Å:* $address\n" .
                            "üõ† *–†–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:* $oboryda\n";

            if (in_array($oboryda, ["–ß–µ—Ä–¥–∞–∫", "–ü–æ–¥–≤–∞–ª", "–ü–æ–¥—ä–µ–∑–¥", "–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ"])) {
                $response_text .= "üè¢ *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤:* $podjezd\n";
                if ($vihod_text) {
                    $vihod_label = $oboryda == "–ü–æ–¥–≤–∞–ª" ? "–ü–æ–¥—ä–µ–∑–¥ —Å –ø–æ–¥–≤–∞–ª–æ–º" : 
                                 ($oboryda == "–ü–æ–¥—ä–µ–∑–¥" ? "–ü–æ–¥—ä–µ–∑–¥ —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º" : "–ü–æ–¥—ä–µ–∑–¥ —Å –≤—ã—Ö–æ–¥–æ–º");
                    $response_text .= "üö™ *$vihod_label:* $vihod_text\n";
                }
            }

            if ($oboryda == "–ß–µ—Ä–¥–∞–∫" || $oboryda == "–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ") {
                $response_text .= "\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ—Ä–¥–∞–∫–µ*\n" .
                                 "üè† *–¢–∏–ø –∫—Ä—ã—à–∏:* $krisha\n" .
                                 "üîë *–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–ª—é—á–∞:* $kluch\n" .
                                 "ü™ú *–ù–∞–ª–∏—á–∏–µ –ª–µ—Å—Ç–Ω–∏—Ü—ã:* $lesnica\n" .
                                 "üîí *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–º–æ–∫:* $dopzamok\n";
            } elseif ($oboryda == "–ü–æ–¥–≤–∞–ª") {
                $response_text .= "\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–≤–∞–ª–µ*\n" .
                                 "üîë *–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–ª—é—á–∞:* $kluch\n" .
                                 "üîí *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–º–æ–∫:* $dopzamok\n";
            } elseif ($oboryda == "–ü–æ–¥—ä–µ–∑–¥") {
                $response_text .= "\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥—ä–µ–∑–¥–µ*\n" .
                                 "üîí *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–º–æ–∫:* $dopzamok\n";
            } elseif ($oboryda == "–§–∞—Å–∞–¥") {
                $response_text .= "\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞—Å–∞–¥–µ*\n" .
                                 "üîå *–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è:* $pitanie\n" .
                                 "üîó *–ò—Å—Ç–æ—á–Ω–∏–∫ –ª–∏–Ω–∫–∞:* $link\n";
            }

            $response_text .= "\n*–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ*\n" .
                             "üåç *–†–µ–≥–∏–æ–Ω:* $region\n" .
                             "üåê *–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:* $pon\n" .
                             "\n*–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n" .
                             "üë§ *–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å:* $pred\n" .
                             "üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* [$phone](tel:$phone)\n";

            if (!empty($text)) {
                $response_text .= "\n*–ó–∞–º–µ—Ç–∫–∏*\n";
                $notes = explode("\n", $text);
                foreach ($notes as $note) {
                    $note = trim($note);
                    if (empty($note)) continue;

                    if (preg_match('/\[DATE\](.*?)\[\/DATE\]\[AUTHOR\](.*?)\[\/AUTHOR\]\[TEXT\](.*?)\[\/TEXT\]/', $note, $matches)) {
                        $date = sanitize($matches[1]);
                        $author = sanitize($matches[2]);
                        $note_text = sanitize($matches[3]);
                        $response_text .= "üìÖ *$date* | üë§ *$author*\n$note_text\n";
                    } elseif (preg_match('/\[(\d{2}\.\d{2}\.\d{4} \d{2}:\d{2}:\d{2})\] (.*?)(?:<br>|$)/', $note, $matches)) {
                        $date = sanitize($matches[1]);
                        $author_note = sanitize($matches[2]);
                        if (preg_match('/^(.*?) (.*)$/', $author_note, $author_matches)) {
                            $author = $author_matches[1];
                            $note_text = $author_matches[2];
                            $response_text .= "üìÖ *$date* | üë§ *$author*\n$note_text\n";
                        } else {
                            $response_text .= "$author_note\n";
                        }
                    } else {
                        $response_text .= "$note\n";
                    }
                }
            }

            $response_text .= "\nüîó [–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ](https://ardmoney.ru/navigard/result.php?adress_id=$house_id)";

            sendResponse('sendMessage', [
                'chat_id' => $chat_id,
                'text' => $response_text,
                'parse_mode' => 'Markdown',
                'disable_web_page_preview' => true
            ]);
        } else {
            sendResponse('sendMessage', [
                'chat_id' => $chat_id,
                'text' => "–î–æ–º —Å ID $house_id –Ω–µ –Ω–∞–π–¥–µ–Ω."
            ]);
        }

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback
        sendResponse('answerCallbackQuery', [
            'callback_query_id' => $callback_id
        ]);
    }
}

$connect->close();
http_response_code(200);
?>