<?php
// tg_api.php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
$servername = "localhost";
$username = "gaveloid";
$password = "64ihufoz";
$dbname = "gaveloid";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    file_put_contents('telegram_log.txt', date('Y-m-d H:i:s') . " - DB Connection failed: " . $conn->connect_error . "\n", FILE_APPEND);
    exit;
}
$conn->set_charset("utf8mb4");

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
$input = file_get_contents("php://input");
file_put_contents('telegram_log.txt', date('Y-m-d H:i:s') . " - Input: " . $input . "\n", FILE_APPEND);

$update = json_decode($input, true);
$chat_id = $update['message']['chat']['id'] ?? $update['callback_query']['message']['chat']['id'] ?? null;
$message = $update['message']['text'] ?? '';
$message_id = $update['message']['message_id'] ?? $update['callback_query']['message']['message_id'] ?? null;
$callback_data = $update['callback_query']['data'] ?? '';

define('BOT_TOKEN', '7602474226:AAGhXrVMg2QxiPI3ey5wJflceR5_BTvJGPY');

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
function sendOrEditMessage($chat_id, $text, $reply_markup = null, $message_id_to_edit = null) {
    $method = $message_id_to_edit ? "editMessageText" : "sendMessage";
    $url = "https://api.telegram.org/bot" . BOT_TOKEN . "/$method";
    $data = [
        'chat_id' => $chat_id,
        'text' => $text,
        'parse_mode' => 'HTML',
    ];
    if ($message_id_to_edit) {
        $data['message_id'] = $message_id_to_edit;
    }
    if ($reply_markup) {
        $data['reply_markup'] = json_encode($reply_markup);
    }
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $result = curl_exec($ch);
    $error = curl_error($ch);
    curl_close($ch);
    file_put_contents('telegram_log.txt', date('Y-m-d H:i:s') . " - Sent/Edited: $text" . ($error ? " | Error: $error" : "") . "\n", FILE_APPEND);
    return json_decode($result, true);
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
function deleteMessage($chat_id, $message_id) {
    $url = "https://api.telegram.org/bot" . BOT_TOKEN . "/deleteMessage";
    $data = ['chat_id' => $chat_id, 'message_id' => $message_id];
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_exec($ch);
    curl_close($ch);
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥)
$main_menu = [
    'inline_keyboard' => [
        [
            ['text' => 'üöó –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–≥', 'callback_data' => 'add_mileage'],
            ['text' => 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data' => 'stats'],
        ],
        [
            ['text' => 'üìú –ò—Å—Ç–æ—Ä–∏—è', 'callback_data' => 'history_1'],
            ['text' => 'üõ¢ –ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞', 'callback_data' => 'oil_change'],
        ],
        [
            ['text' => 'üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å', 'callback_data' => 'delete_entry'],
            ['text' => '‚Ñπ –û –±–æ—Ç–µ', 'callback_data' => 'about'],
        ],
    ]
];

// –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
$back_to_main = [
    'inline_keyboard' => [
        [['text' => 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', 'callback_data' => 'main_menu']],
    ]
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ chat_id
if (!$chat_id) {
    file_put_contents('telegram_log.txt', date('Y-m-d H:i:s') . " - No chat_id found\n", FILE_APPEND);
    exit;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–±–µ–≥–∞
$sql_last = "SELECT displayed_mileage FROM mileage ORDER BY id DESC LIMIT 1";
$result_last = $conn->query($sql_last);
$last_data = $result_last ? $result_last->fetch_assoc() : null;
$current_mileage = $last_data ? $last_data['displayed_mileage'] : 0;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∏ callback
if ($message == '/start') {
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendOrEditMessage($chat_id, "‚ú® <b>Gaveloid Bot</b> ‚ú®\n–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—á—ë—Ç–∞ –ø—Ä–æ–±–µ–≥–∞ –∏ –º–∞—Å–ª–∞!\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", $main_menu);
} elseif ($callback_data) {
    file_put_contents('telegram_log.txt', date('Y-m-d H:i:s') . " - Callback Data: '$callback_data'\n", FILE_APPEND);

    switch ($callback_data) {
        case 'add_mileage':
            sendOrEditMessage($chat_id, "üìè <b>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–≥</b>\n–í–≤–µ–¥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \"–¥–æ\" \"–ø–æ—Å–ª–µ\"\n–ü—Ä–∏–º–µ—Ä: <code>230000 230150</code>\n\nüìå –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Ç—ã –Ω–∞ –æ—Ñ–∏—Å –ø—Ä–∏–µ—Ö–∞–ª, –≤—Ç–æ—Ä–æ–µ ‚Äî –∫–æ–≥–¥–∞ –∏–¥—ë—à—å –∫ –¥–æ–ª–±–æ—ë–±—É –ö–æ—Å—Ç–µ.", $back_to_main, $message_id);
            break;

        case 'stats':
            $total_wrap = $conn->query("SELECT SUM(wrap_distance) AS total_wrap FROM mileage")->fetch_assoc()['total_wrap'] ?? 0;
            $real_mileage = $current_mileage - $total_wrap;

            $week_data = $conn->query("SELECT SUM(wrap_distance) AS week FROM mileage WHERE mileage_added_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)")->fetch_assoc();
            $month_data = $conn->query("SELECT SUM(wrap_distance) AS month FROM mileage WHERE mileage_added_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)")->fetch_assoc();
            $year_data = $conn->query("SELECT SUM(wrap_distance) AS year FROM mileage WHERE mileage_added_at >= DATE_SUB(CURDATE(), INTERVAL 365 DAY)")->fetch_assoc();

            $text = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> üìä\n";
            $text .= "üöó –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–≥: <b>" . number_format($real_mileage, 0, ',', ' ') . " –∫–º</b>\n";
            $text .= "üîß –ù–∞–º–æ—Ç–∫–∞ –≤—Å–µ–≥–æ: <b>" . number_format($total_wrap, 0, ',', ' ') . " –∫–º</b>\n";
            $text .= "üìÖ –ó–∞ 7 –¥–Ω–µ–π: <b>" . number_format($week_data['week'] ?? 0, 0, ',', ' ') . " –∫–º</b>\n";
            $text .= "üìÖ –ó–∞ 30 –¥–Ω–µ–π: <b>" . number_format($month_data['month'] ?? 0, 0, ',', ' ') . " –∫–º</b>\n";
            $text .= "üìÖ –ó–∞ –≥–æ–¥: <b>" . number_format($year_data['year'] ?? 0, 0, ',', ' ') . " –∫–º</b>";
            sendOrEditMessage($chat_id, $text, $main_menu, $message_id);
            break;

        case (preg_match('/^history_(\d+)$/', $callback_data, $matches) ? $callback_data : ''):
            $page = (int)($matches[1] ?? 1);
            $limit = 5;
            $offset = ($page - 1) * $limit;
            $sql_history = "SELECT id, actual_mileage, displayed_mileage, wrap_distance, DATE_FORMAT(mileage_added_at, '%d.%m.%Y') as formatted_date FROM mileage ORDER BY mileage_added_at DESC LIMIT $limit OFFSET $offset";
            $result_history = $conn->query($sql_history);
            $total_records = $conn->query("SELECT COUNT(*) as total FROM mileage")->fetch_assoc()['total'];
            $total_pages = ceil($total_records / $limit);

            $text = "üìú <b>–ò—Å—Ç–æ—Ä–∏—è</b> (—Å—Ç—Ä. $page/$total_pages)\n";
            if ($result_history && $result_history->num_rows > 0) {
                while ($row = $result_history->fetch_assoc()) {
                    $text .= sprintf("üìÖ %s | ID: <b>%d</b>\nüöó %s –∫–º ‚Üí %s –∫–º (+%s –∫–º)\n",
                        $row['formatted_date'], $row['id'],
                        number_format($row['actual_mileage'], 0, ',', ' '),
                        number_format($row['displayed_mileage'], 0, ',', ' '),
                        number_format($row['wrap_distance'], 0, ',', ' '));
                }
            } else {
                $text .= "‚ö† –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.";
            }

            $nav_buttons = [];
            if ($page > 1) $nav_buttons[] = ['text' => '‚¨Ö –ù–∞–∑–∞–¥', 'callback_data' => "history_" . ($page - 1)];
            if ($page < $total_pages) $nav_buttons[] = ['text' => '–í–ø–µ—Ä—ë–¥ ‚û°', 'callback_data' => "history_" . ($page + 1)];
            $history_menu = [
                'inline_keyboard' => [
                    $nav_buttons,
                    [['text' => 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', 'callback_data' => 'main_menu']],
                ]
            ];
            sendOrEditMessage($chat_id, $text, $history_menu, $message_id);
            break;

        case 'oil_change':
            $oil_data = $conn->query("SELECT odometer_at_change, DATE_FORMAT(date_of_change, '%d.%m.%Y') as formatted_date FROM oil_changes ORDER BY odometer_at_change DESC LIMIT 1")->fetch_assoc();
            $last_oil_change = $oil_data ? $oil_data['odometer_at_change'] : 0;
            $last_oil_date = $oil_data ? $oil_data['formatted_date'] : '–ù–∏–∫–æ–≥–¥–∞';
            $distance_since_oil = $current_mileage - $last_oil_change;
            $distance_until_oil = 7000 - $distance_since_oil;

            $progress = min(10, max(0, floor(($distance_since_oil / 7000) * 10)));
            $progress_percent = floor(($distance_since_oil / 7000) * 100);

            $text = "üõ¢ <b>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞</b> üõ¢\n";
            $text .= "‚è≥ –ü–æ—Å–ª–µ–¥–Ω—è—è: <b>" . number_format($last_oil_change, 0, ',', ' ') . " –∫–º</b> ($last_oil_date)\n";
            $text .= "üöó –¢–µ–∫—É—â–∏–π –ø—Ä–æ–±–µ–≥: <b>" . number_format($current_mileage, 0, ',', ' ') . " –∫–º</b>\n";
            $text .= "‚è∞ –î–æ –∑–∞–º–µ–Ω—ã: <b>" . ($distance_until_oil <= 0 ? "–°—Ä–æ—á–Ω–æ!" : number_format($distance_until_oil, 0, ',', ' ') . " –∫–º") . "</b>\n";
            $text .= "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: " . str_repeat("‚ñà", $progress) . str_repeat("‚ñë", 10 - $progress) . " ($progress_percent%)";
            sendOrEditMessage($chat_id, $text, [
                'inline_keyboard' => [
                    [['text' => 'üîß –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ–Ω—É', 'callback_data' => 'submit_oil']],
                    [['text' => 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', 'callback_data' => 'main_menu']],
                ]
            ], $message_id);
            break;

        case 'submit_oil':
            sendOrEditMessage($chat_id, "üîß <b>–§–∏–∫—Å–∞—Ü–∏—è –∑–∞–º–µ–Ω—ã –º–∞—Å–ª–∞</b>\n–í–≤–µ–¥–∏ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–±–µ–≥ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ):\n–ü—Ä–∏–º–µ—Ä: <code>230150</code>", $back_to_main, $message_id);
            break;

        case 'delete_entry':
            $sql_last_three = "SELECT id, actual_mileage, displayed_mileage, DATE_FORMAT(mileage_added_at, '%d.%m.%Y') as formatted_date FROM mileage ORDER BY id DESC LIMIT 3";
            $result_last_three = $conn->query($sql_last_three);

            $text = "üóë <b>–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å</b>\n–í–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–ø–∏—Å–∏:\n";
            if ($result_last_three && $result_last_three->num_rows > 0) {
                while ($row = $result_last_three->fetch_assoc()) {
                    $text .= sprintf("ID: <b>%d</b> | %s | %s –∫–º ‚Üí %s –∫–º\n",
                        $row['id'], $row['formatted_date'],
                        number_format($row['actual_mileage'], 0, ',', ' '),
                        number_format($row['displayed_mileage'], 0, ',', ' '));
                }
                $text .= "\n–í–≤–µ–¥–∏ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n–ü—Ä–∏–º–µ—Ä: <code>5</code>";
            } else {
                $text .= "‚ö† –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.";
            }
            sendOrEditMessage($chat_id, $text, $back_to_main, $message_id);
            break;

        case 'about':
            $text = "‚Ñπ <b>–û –±–æ—Ç–µ</b>\n";
            $text .= "–Ø ‚Äî Gaveloid Bot, —Å–æ–∑–¥–∞–Ω –¥–ª—è —É—á—ë—Ç–∞ –ø—Ä–æ–±–µ–≥–∞ –∏ –∑–∞–º–µ–Ω—ã –º–∞—Å–ª–∞.\n";
            $text .= "üìÖ –î–∞—Ç–∞: " . date('d.m.Y') . "\n";
            $text .= "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: xAI\n";
            $text .= "üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!";
            sendOrEditMessage($chat_id, $text, $main_menu, $message_id);
            break;

        case 'main_menu':
            sendOrEditMessage($chat_id, "‚ú® <b>Gaveloid Bot</b> ‚ú®\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", $main_menu, $message_id);
            break;

        default:
            sendOrEditMessage($chat_id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: '$callback_data'", $main_menu, $message_id);
            break;
    }
} elseif (preg_match('/^(\d+)\s+(\d+)$/', $message, $matches)) {
    deleteMessage($chat_id, $message_id);
    $actual_mileage = (int)$matches[1];
    $displayed_mileage = (int)$matches[2];
    $wrap_distance = $displayed_mileage - $actual_mileage;
    $distance_driven = $actual_mileage;

    if ($wrap_distance < 0) {
        sendOrEditMessage($chat_id, "‚ùå –û—à–∏–±–∫–∞: '–ü–æ—Å–ª–µ' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ '–î–æ'.\n–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.", $main_menu, $message_id);
    } else {
        $sql = "INSERT INTO mileage (actual_mileage, displayed_mileage, mileage_added_at, distance_driven, wrap_distance) VALUES (?, ?, NOW(), ?, ?)";
        $stmt = $conn->prepare($sql);
        if ($stmt) {
            $stmt->bind_param("iiii", $actual_mileage, $displayed_mileage, $distance_driven, $wrap_distance);
            if ($stmt->execute()) {
                $text = "‚úÖ <b>–ü—Ä–æ–±–µ–≥ –¥–æ–±–∞–≤–ª–µ–Ω</b>\n";
                $text .= "üöó –î–æ: <b>" . number_format($actual_mileage, 0, ',', ' ') . " –∫–º</b>\n";
                $text .= "üìè –ü–æ—Å–ª–µ: <b>" . number_format($displayed_mileage, 0, ',', ' ') . " –∫–º</b>";
                sendOrEditMessage($chat_id, $text, $main_menu, $message_id);
            } else {
                sendOrEditMessage($chat_id, "‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: " . $stmt->error, $main_menu, $message_id);
            }
            $stmt->close();
        } else {
            sendOrEditMessage($chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞.", $main_menu, $message_id);
        }
    }
} elseif (preg_match('/^\d+$/', $message, $matches)) {
    deleteMessage($chat_id, $message_id);
    $value = (int)$matches[0];

    // –§–∏–∫—Å–∞—Ü–∏—è –∑–∞–º–µ–Ω—ã –º–∞—Å–ª–∞
    if (isset($update['message']['reply_to_message']['text']) && strpos($update['message']['reply_to_message']['text'], "–§–∏–∫—Å–∞—Ü–∏—è –∑–∞–º–µ–Ω—ã –º–∞—Å–ª–∞") !== false) {
        $sql = "INSERT INTO oil_changes (odometer_at_change, date_of_change) VALUES (?, NOW())";
        $stmt = $conn->prepare($sql);
        if ($stmt) {
            $stmt->bind_param("i", $value);
            if ($stmt->execute()) {
                sendOrEditMessage($chat_id, "‚úÖ <b>–ú–∞—Å–ª–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ</b>\nüõ¢ –ü—Ä–æ–±–µ–≥: <b>" . number_format($value, 0, ',', ' ') . " –∫–º</b>", $main_menu, $message_id);
            } else {
                sendOrEditMessage($chat_id, "‚ùå –û—à–∏–±–∫–∞: " . $stmt->error, $main_menu, $message_id);
            }
            $stmt->close();
        }
    // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    } elseif (isset($update['message']['reply_to_message']['text']) && strpos($update['message']['reply_to_message']['text'], "–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å") !== false) {
        $sql = "DELETE FROM mileage WHERE id = ?";
        $stmt = $conn->prepare($sql);
        if ($stmt) {
            $stmt->bind_param("i", $value);
            if ($stmt->execute() && $stmt->affected_rows > 0) {
                sendOrEditMessage($chat_id, "üóë <b>–ó–∞–ø–∏—Å—å ID $value —É–¥–∞–ª–µ–Ω–∞</b>", $main_menu, $message_id);
            } else {
                sendOrEditMessage($chat_id, "‚ùå –ó–∞–ø–∏—Å—å —Å ID $value –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞: " . $stmt->error, $main_menu, $message_id);
            }
            $stmt->close();
        }
    } else {
        sendOrEditMessage($chat_id, "‚ùì –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –±–æ—Ç–∞.", $main_menu, $message_id);
    }
} else {
    sendOrEditMessage($chat_id, "‚ùì –ù–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.", $main_menu, $message_id);
}

$conn->close();
?>